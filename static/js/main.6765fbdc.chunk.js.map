{"version":3,"sources":["images/about.jpg","components/header.js","components/loading.js","components/card.js","components/table.js","api/one.js","components/home.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarPage","Navbar","bg","variant","expand","className","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Loading","Spinner","animation","useStyles","makeStyles","theme","root","flexGrow","Card","padding","spacing","textAlign","color","palette","text","secondary","Disp","data","lastRefreshed","classes","Date","toDateString","Grid","container","item","xs","Fragment","sm","style","border","CardContent","Typography","title","align","gutterBottom","component","start","end","total","confirmed","duration","separator","recovered","vw","deaths","App","props","state","hits","isLoading","error","this","setState","axios","get","API","then","result","statewise","catch","message","Table","striped","bordered","hover","map","hit","Component","fetchData","a","Home","fetchedData","React","StyledBadge","withStyles","badge","backgroundColor","boxShadow","background","paper","position","top","left","width","height","borderRadius","content","transform","opacity","Badge","display","margin","large","About","lg","waves","overlap","anchorOrigin","vertical","horizontal","Avatar","alt","src","Me","overlay","fontSize","TransitionGroup","CSSTransition","timeout","classNames","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6765fbdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.29bb6b99.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {Navbar,Container,Nav}from 'react-bootstrap';\r\nimport \"../App.css\";\r\n\r\n\r\nfunction NavbarPage (){\r\n\r\n    return (\r\n      \r\n      <div>\r\n    \r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"nav-sh\">\r\n        <Container>\r\n    <Navbar.Brand href=\"/home\">Covid-19 India</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"ml-auto\">\r\n      \r\n      <Nav.Link href=\"/home\">Home</Nav.Link>\r\n      <Nav.Link href=\"/about\">About</Nav.Link>\r\n        \r\n      </Nav>\r\n      \r\n    </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n  \r\n    </div>\r\n        \r\n     \r\n    );\r\n  \r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\r\nimport {Spinner, Container} from 'react-bootstrap';\r\nimport \"../App.css\";\r\n\r\nfunction Loading(){\r\n    return (\r\n        <Container className=\"load\">\r\n            <Spinner animation=\"border\" />\r\n        </Container>\r\n        \r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../App.css';\r\nimport {Typography,Card,CardContent} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport Loading from './loading';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  Card: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Disp ({data: {data,lastRefreshed} }) {\r\n    const classes = useStyles();\r\n    \r\n    if(!data){\r\n        return \"\";\r\n    }\r\n\r\n    if(!lastRefreshed){\r\n      return \"\";\r\n  }\r\n    \r\n    \r\n\r\n\r\n    \r\n\r\n\r\n  return (\r\n      \r\n    <div className={classes.root}>\r\n      <p>Last Updated : {new Date(lastRefreshed).toDateString()}</p>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={1}>\r\n\r\n        <React.Fragment>\r\n        <Grid item xs={4} sm={4} >\r\n        <Card className={classes.root} style={{border:\"1px solid red\"}}  className=\"c1\">\r\n      <CardContent>\r\n        <Typography className={classes.title}  align=\"Center\" color=\"textSecondary\" gutterBottom>\r\n          Confirmed\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\" align=\"Center\" style={{color:\"red\"}}>\r\n            <CountUp start={0} end={data.total.confirmed} duration={2} separator=\",\" />\r\n        </Typography>\r\n       \r\n        <Typography variant=\"body2\" component=\"p\" align=\"Center\" style={{color:\"red\"}}>\r\n           {/* + <CountUp start={0} end={todayCases} duration={2} separator=\",\" /> */}\r\n        </Typography>\r\n      </CardContent>\r\n      \r\n    </Card>\r\n        </Grid>\r\n\r\n\r\n\r\n        <Grid item xs={4} sm={4}>\r\n          <Card className={classes.root} style={{border:\"1px solid rgb(103, 199, 6)\"}} className=\"c2\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" align=\"Center\" gutterBottom>\r\n          Recovered\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\" align=\"Center\" style={{color:\"rgb(103, 199, 6)\"}}>\r\n            <CountUp start={0} end={data.total.recovered} duration={2} separator=\",\" />\r\n        </Typography>\r\n       \r\n        <Typography variant=\"body2\" component=\"p\" align=\"Center\" style={{color:\"white\"}}>\r\n          {/* . */}\r\n        </Typography>\r\n      </CardContent>\r\n      \r\n    </Card>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={4} sm={4}>\r\n          <Card className={classes.root} style={{border:\"1px solid grey\"}} className=\"c3\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" align=\"Center\" vw=\"2\" gutterBottom>\r\n          Deaths\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\" align=\"Center\"  >\r\n            <CountUp start={0} end={data.total.deaths} duration={2} separator=\",\" />\r\n        </Typography>\r\n       \r\n        <Typography variant=\"body2\" component=\"p\" align=\"Center\" >\r\n           {/* + <CountUp start={0} end={todayDeaths} duration={2} separator=\",\" /> */}\r\n        </Typography>\r\n      </CardContent>\r\n      \r\n    </Card>\r\n\r\n        </Grid>\r\n      </React.Fragment>\r\n\r\n\r\n\r\n        </Grid>\r\n        \r\n      </Grid>\r\n    </div>\r\n    \r\n      \r\n  );\r\n}\r\n\r\n\r\nexport default Disp;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Table,Container} from 'react-bootstrap';\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport Loading from './loading';\r\n \r\nconst API = 'https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewisen';\r\nconst DEFAULT_QUERY = 'redux';\r\n \r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      hits: [],\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n  }\r\n \r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n \r\n    axios.get(API + DEFAULT_QUERY)\r\n      .then(result => this.setState({\r\n        hits: result.data.data.statewise,\r\n        isLoading: false\r\n      }))\r\n      .catch(error => this.setState({\r\n        error,\r\n        isLoading: false\r\n      }));\r\n  }\r\n \r\nrender() {\r\n    const { hits, isLoading, error } = this.state;\r\n \r\n    if (error) {\r\n      return <p>{error.message}</p>;\r\n    }\r\n \r\n    if (isLoading) {\r\n      return <Loading/>;\r\n    }\r\n \r\n    return (\r\n        \r\n        <Container>\r\n    \r\n        <Table striped bordered hover className=\"table-main\">\r\n          \r\n        <thead >\r\n          <tr>\r\n            \r\n            <th >State</th>\r\n            <th style={{color:\"red\"}}>Confirmed</th>\r\n            <th style={{color:\"green\"}}>Recovered</th>\r\n            <th style={{color:\"grey\"}}>Deaths</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody >\r\n        {hits.map(hit =>\r\n            <tr>\r\n                <td>{hit.state}</td>\r\n                <td>{hit.confirmed}</td>\r\n                <td>{hit.recovered}</td>\r\n                <td>{hit.deaths}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        \r\n        \r\n      </Table>\r\n\r\n      </Container>\r\n      \r\n     \r\n      \r\n    );\r\n  }\r\n}\r\n \r\nexport default App;\r\n\r\n\r\n\r\n\r\n// {hits.map(hit =>\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst url = \"https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise\";\r\n\r\n\r\nexport const fetchData = async () => {\r\n    try{\r\n        const {data: {data,lastRefreshed}}= await axios.get(url);\r\n\r\n       \r\n\r\n        return {data,lastRefreshed};\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport Disp from './card';\r\n\r\nimport Tablex from './table';\r\n\r\n\r\nimport { fetchData} from '../api/one';\r\n\r\n\r\nclass Home extends React.Component {\r\n    state ={\r\n      data: [],\r\n      \r\n    }\r\n    async componentDidMount(){\r\n      const fetchedData = await fetchData();\r\n\r\n      this.setState({data:fetchedData})\r\n     \r\n    }\r\n   \r\n\r\n    render(){\r\n      const { data } = this.state;\r\n      return(\r\n        <div>\r\n            <Container className=\"disp\"><Disp data={data} /></Container> \r\n        \r\n            <Tablex />\r\n        </div>\r\n\r\n    );\r\n}\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Container} from 'react-bootstrap';\r\nimport {  MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\r\nimport {Badge,Avatar,makeStyles,withStyles} from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport Me from '../images/about.jpg';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n      backgroundColor: '#44b700',\r\n      color: '#44b700',\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      '&::after': {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n        animation: '$ripple 1.2s infinite ease-in-out',\r\n        border: '1px solid currentColor',\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    '@keyframes ripple': {\r\n      '0%': {\r\n        transform: 'scale(.8)',\r\n        opacity: 1,\r\n      },\r\n      '100%': {\r\n        transform: 'scale(2.4)',\r\n        opacity: 0,\r\n      },\r\n    },\r\n  }))(Badge);\r\n\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    large: {\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n        boxShadow: '0px 4px 5px #5F5F5F',\r\n      },\r\n  }));\r\n\r\n\r\nfunction About () {\r\n    const classes = useStyles();\r\n  return (\r\n\r\n    <Container>\r\n    <MDBCard className=\"my-5 px-4 pb-5\">\r\n      <MDBCardBody>\r\n       \r\n        <MDBRow>\r\n          <MDBCol lg=\"4\" >\r\n            <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n            <div className={classes.root}>\r\n                <StyledBadge overlap=\"circle\" anchorOrigin={{  vertical: 'bottom',horizontal: 'right',}}variant=\"dot\">\r\n                    <Avatar alt=\"S\" src={Me} className={classes.large}/>\r\n                </StyledBadge>\r\n            \r\n            </div>\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n          <MDBCol lg=\"8\" >\r\n            \r\n              <h3 className=\"font-weight-bold mb-3 p-0\">\r\n                Subham Singh\r\n              </h3>\r\n            \r\n            <h5 className=\"font-weight-bold mb-3 p-0\" style={{color:\"grey\"}}>\r\n              Web Developer\r\n            </h5>\r\n            <p>\r\n             Hey there,\r\n             I am a full stack web developer and CSE undeegrad. I have made\r\n             this Web App using React.js and styling is done by Material-Ui and\r\n             MDBReact. \r\n             This App renders the data using API which takes data from <a href=\"#\"> mohfw.go.in </a>\r\n             and updates in every few hour.\r\n            </p>\r\n            \r\n            <div className=\"social\">\r\n            <a href=\"https://www.facebook.com/shubhu.ak\" style={{color: 'black'}}><FacebookIcon fontSize='large'/></a>\r\n            <a href=\"https://www.linkedin.com/in/subham-singh-cc/\" style={{color: 'black'}}><LinkedInIcon fontSize='large'/></a>\r\n            <a href=\"https://www.instagram.com/shubham__ig/\" style={{color: 'black'}}><InstagramIcon fontSize='large'/></a>\r\n            </div>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n</MDBCardBody>\r\n    </MDBCard>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\n\nimport \"./App.css\";\nimport NavbarPage from './components/header';\nimport Home from './components/home';\nimport About from './components/about';\nimport { Container } from 'react-bootstrap';\n\n\n\nclass App extends React.Component {\n    \n\n    render(){\n      \n      \n      return(\n        <HashRouter>\n        <div>\n        <NavbarPage />\n        \n       \n        <TransitionGroup>\n         <CSSTransition timeout={500} classNames=\"item\">\n          <Switch>\n               \n          \n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/\" component={Home}/>\n         \n          </Switch>\n            </CSSTransition>\n            </TransitionGroup>\n         \n        </div>\n        </HashRouter>\n      );\n    }\n\n\n\n\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}